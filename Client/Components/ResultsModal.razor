@using static BlazorApp.Shared.Assets

@code {
    [Parameter] public double assesEaten { get; set; }
    [Parameter] public int totalClicks { get; set; }
    [Parameter] public string scoreText { get; set; } = string.Empty;
    [Parameter] public List<AssTypeEnum> AssTypes { get; set; } = new();
    [Parameter] public Dictionary<AssTypeEnum, int> Breakdown { get; set; } = new();
    [Parameter] public EventCallback OnTryAgain { get; set; }
    [Parameter] public EventCallback OnSaveScore { get; set; }

    public BSModal? Modal;
}

<BSModal @ref="Modal" Id="resultsModal" IsVerticallyCentered="true" Title="Results">
    <Header>
        <h5 class="modal-title">
            <i class="fas fa-flag-checkered me-2"></i>
            Game Over!
        </h5>
    </Header>
    <Body>
        <div class="text-center mb-4">
            <h2 class="display-2 display-md-1 fw-bold mb-0">@Math.Truncate(assesEaten)</h2>
            <p class="lead text-muted">Asses Devoured</p>
            <div class="text-muted mb-2">
                @totalClicks clicks â€¢ @(totalClicks > 0 ? Math.Round(assesEaten / totalClicks, 3) : 0) efficiency
            </div>
            <p class="fs-6 fs-md-5 mt-3">@scoreText</p>
        </div>

        <div class="stats-section">
            <h4 class="mb-3 fs-5"><i class="fas fa-chart-pie me-2"></i>Breakdown</h4>
            <div class="row g-2 g-md-3 justify-content-center">
                @foreach(var ass in AssTypes)
                {
                    <div class="col-4">
                        <div class="stat-card text-center p-2 rounded">
                            <img src="/images/Asses/@ass.ToString()/entire_ass.png" width="40" class="mb-1 mb-md-2" alt="@ass" />
                            <div class="stat-value fw-bold fs-5">@Breakdown[ass]</div>
                            <div class="stat-label small text-muted d-none d-md-block">@ass</div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <div class="hstack justify-content-center gap-2 mt-4">
            <button type="button" class="btn btn-outline-warning" @onclick="() => OnSaveScore.InvokeAsync()">
                <i class="fas fa-save me-2"></i>Save Score
            </button>
            <button type="button" class="btn btn-primary" @onclick="() => OnTryAgain.InvokeAsync()">
                <i class="fas fa-rotate me-2"></i>Try Again
            </button>
        </div>
    </Body>
</BSModal>
