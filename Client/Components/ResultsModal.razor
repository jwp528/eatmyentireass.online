@using static BlazorApp.Shared.Assets

@code {
    [Parameter] public double assesEaten { get; set; }
    [Parameter] public string scoreText { get; set; } = string.Empty;
    [Parameter] public List<AssTypeEnum> AssTypes { get; set; } = new();
    [Parameter] public Dictionary<AssTypeEnum, int> Breakdown { get; set; } = new();
    [Parameter] public EventCallback OnTryAgain { get; set; }

    public Modal Modal;
}

<Modal @ref="Modal" IsVerticallyCentered="true" HeaderCssClass="bg-primary text-white" Visible="IsVisible" UseStaticBackdrop="true">
    <HeaderTemplate>
        <h5 class="modal-title">
            <i class="fas fa-flag-checkered"></i>
            Results: @Math.Truncate(assesEaten) ass(es)
        </h5>
    </HeaderTemplate>
    <BodyTemplate>
        <p class="display-1 text-center fw-bold">@Math.Truncate(assesEaten)</p>
        <p class="lead text-center">@scoreText</p>

        <p>Breakdown:</p>
        <div class="row">
            @foreach(var ass in AssTypes)
            {
                <div class="col">
                    <p class="text-center">
                        <img src="/images/Asses/@ass.ToString()/entire_ass.png" width="50" />
                        <br />
                        <span class="fw-bold">@Breakdown[ass]</span>
                    </p>
                </div>
            }
        </div>

        <div class="hstack justify-content-end">
            <Button Color="ButtonColor.Primary" @onclick="() => OnTryAgain.InvokeAsync()">
                Try again <i class="fas fa-rotate ms-3"></i>
            </Button>
        </div>
    </BodyTemplate>
</Modal>
